{"version":3,"sources":["spotify.js","login/Login.js","data/DataLayer.js","player/sidebar/partials/SidebarOption.js","player/sidebar/Sidebar.js","player/body/partials/Header.js","data/SoundLayer.js","player/body/partials/SongRow.js","player/body/Body.js","player/footer/Footer.js","player/Player.js","App.js","serviceWorker.js","data/reducer.js","data/soundReducer.js","index.js"],"names":["redirectUrl","window","location","origin","loginUrl","join","Login","className","src","alt","href","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","SidebarOption","spotify","title","id","Icon","dispatch","onClick","e","type","getPlaylistTracks","then","response","tracks","changePlaylist","Sidebar","playlists","console","log","HomeIcon","SearchIcon","LibraryMusicIcon","key","items","map","playlist","name","Header","user","placeholder","Avatar","images","url","display_name","reload","SoundLayerContext","SoundLayer","useSoundLayerValue","SongRow","track","playing","repeat","soundDispatch","wasPlaying","audio","Audio","preview_url","loop","document","artists","artist","changeTrack","album","Body","current_playlist","volume","description","fontSize","Footer","shuffle","setRepeat","setShuffle","counter","index","forEach","item","onended","randomTrackNumber","Math","floor","random","length","randomTrack","Grid","container","spacing","xs","Slider","aria-labelledby","valueLabelDisplay","onChange","event","min","max","Player","SpotifyWebApi","App","token","useEffect","hash","substring","split","reduce","initial","parts","decodeURIComponent","_token","setAccessToken","getMe","getUserPlaylists","Boolean","hostname","match","state","action","currentPlaylist","soundReducer","play","pause","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.373cb74b.chunk.js","sourcesContent":["export const authEndpoint = 'https://accounts.spotify.com/authorize';\n\nconst redirectUrl = window.location.origin + '/';\nconst clientId = '93c3ca3cd2024e11bfe8204cd3fa9c73'; // clintId you can get at https://developer.spotify.com/dashboard This is a Client ID of Raghavendra\n\n\nconst scopes = [\n    'user-read-currently-playing',\n    'user-read-recently-played',\n    'user-read-playback-state',\n    'user-top-read',\n    'user-modify-playback-state'\n];\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUrl}&scopes=${scopes.join('%20')}&response_type=token&show_dialog=true`;\n\nexport const getAccessTokenFromUrl = () => {\n    return window.location.hash\n        .substring(1)\n        .split('&')\n        .reduce((initial, item) => {\n            let parts = item.split('=');\n            initial[parts[0]] = decodeURIComponent(parts[1]);\n            return initial\n        }, {});\n};","import React from 'react'\nimport './Login.css';\nimport { loginUrl } from '../spotify'\n\nfunction Login() {\n    return (\n        <div className=\"login\">\n            <img\n                src=\"https://firebasestorage.googleapis.com/v0/b/spotify-raghavendra.appspot.com/o/logo.jpg?alt=media&token=f5835577-582c-4bde-861d-0a9127634b8e\"\n                alt=\"Acoustic Logo Here\" />\n            <a href={loginUrl}>Login with Spotify</a>\n        </div>\n    )\n}\n\nexport default Login","import React, { createContext, useContext, useReducer } from 'react';\n\nexport const DataLayerContext = createContext();\n\nexport const DataLayer = ({ initialState, reducer, children }) => (\n    <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </DataLayerContext.Provider>\n);\n\nexport const useDataLayerValue = () => useContext(DataLayerContext);","import React from 'react'\nimport './SidebarOption.css'\nimport { useDataLayerValue } from '../../../data/DataLayer';\n\nfunction SidebarOption({ spotify, title, id, Icon }) {\n    const [{ }, dispatch] = useDataLayerValue();\n\n    const changePlaylist = (id, e) => {\n        dispatch({\n            type: 'SET_CURRENT_PLAYLIST',\n            id: id\n        });\n\n        spotify.getPlaylistTracks(id).then((response) => {\n            dispatch({\n                type: 'SET_TRACKS',\n                tracks: response\n            })\n        });\n    }\n\n    return (\n        <div className='sidebarOption'>\n            {Icon && <Icon className='sidebarOption__icon' />}\n            {Icon ? <h4>{title}</h4> : <p onClick={(e) => changePlaylist(id, e)}>{title}</p>}\n        </div>\n    )\n}\n\nexport default SidebarOption","import React from 'react'\nimport './Sidebar.css'\nimport SidebarOption from './partials/SidebarOption';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SearchIcon from '@material-ui/icons/Search';\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\nimport { useDataLayerValue } from \"../../data/DataLayer\";\n\nfunction Sidebar({ spotify }) {\n    const [{ playlists }] = useDataLayerValue();\n    console.log(playlists);\n\n    return (\n        <div className='sidebar'>\n            <img className='sidebar_logo' src='https://firebasestorage.googleapis.com/v0/b/spotify-raghavendra.appspot.com/o/logo.jpg?alt=media&token=f5835577-582c-4bde-861d-0a9127634b8e'\n                alt='Acoustic Logo Here' />\n            <SidebarOption title='Home' Icon={HomeIcon} />\n            <SidebarOption title='Search' Icon={SearchIcon} />\n            <SidebarOption title='Your Library' Icon={LibraryMusicIcon} />\n\n            <br />\n            <strong className='sidebar__title'>PLAYLISTS</strong>\n            <hr />\n            <SidebarOption spotify={spotify} title={\"Acoustic Music\"} id={\"2O3UCsm97Tv0bNgoFEpkhh\"} key={\"2O3UCsm97Tv0bNgoFEpkhh\"} />\n            {playlists?.items?.map((playlist) => {\n                return <SidebarOption spotify={spotify} title={playlist.name} id={playlist.id} key={playlist.id} />\n            })}\n        </div>\n    )\n}\n\nexport default Sidebar","import React from 'react'\nimport './Header.css'\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Avatar } from \"@material-ui/core\";\nimport { useDataLayerValue } from \"../../../data/DataLayer\";\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nfunction Header({ spotify }) {\n    const [{ user }] = useDataLayerValue();\n\n    function refreshPage(){\n        window.location.reload();\n    } \n\n\n    return (\n        <div className=\"header\">\n            <div className=\"header__left\">\n                <SearchIcon />\n                <input\n                    placeholder='Search for Artists, Songs or Podcasts'\n                    type=\"text\" />\n            </div>\n            <div className=\"header__right\">\n                <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\n                <h4>{user?.display_name}</h4>\n                <ExitToAppIcon type=\"submit\" onClick={refreshPage}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Header","import React, { createContext, useContext, useReducer } from 'react';\n\nexport const SoundLayerContext = createContext();\n\nexport const SoundLayer = ({ initialState, reducer, children }) => (\n    <SoundLayerContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </SoundLayerContext.Provider>\n);\n\nexport const useSoundLayerValue = () => useContext(SoundLayerContext);","import React from 'react'\nimport './SongRow.css'\nimport { useDataLayerValue } from '../../../data/DataLayer';\nimport { useSoundLayerValue } from '../../../data/SoundLayer';\n\nfunction SongRow({ track }) {\n    const [{ }, dispatch] = useDataLayerValue();\n    const [{ playing, repeat }, soundDispatch] = useSoundLayerValue();\n\n    const changeTrack = (e, track) => {\n        dispatch({\n            type: 'SET_TRACK',\n            track: track\n        });\n\n        let wasPlaying = playing;\n        soundDispatch({\n            type: 'SET_PLAYING',\n            playing: false,\n        });\n\n        let audio = new Audio(track.preview_url);\n        audio.loop = repeat;\n        soundDispatch({\n            type: 'SET_AUDIO',\n            audio: audio\n        });\n\n        if (wasPlaying) {\n            soundDispatch({\n                type: 'SET_PLAYING',\n                playing: true,\n            });\n        }\n\n        document.title = `${track.name} · ${track.artists.map((artist) => artist.name).join(', ')}`\n    };\n    return (\n        <div className='songRow' onClick={(e) => changeTrack(e, track)}>\n            <img className='songRow__album' src={track.album.images[0].url} alt='' />\n            <div className='songRow__info'>\n                <h1>{track.name}</h1>\n                <p>\n                    {track.artists.map((artist) => artist.name).join(', ')}\n                </p>\n                <p>\n                    {track.album.name}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default SongRow","import React from 'react'\nimport './Body.css'\nimport Header from \"./partials/Header\";\nimport { useDataLayerValue } from \"../../data/DataLayer\";\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport PauseCircleFilledIcon from \"@material-ui/icons/PauseCircleFilled\";\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport SongRow from \"./partials/SongRow\";\nimport { useSoundLayerValue } from \"../../data/SoundLayer\";\n\nfunction Body({ spotify }) {\n    const [{ current_playlist, tracks, track }] = useDataLayerValue();\n    const [{ playing, volume }, soundDispatch] = useSoundLayerValue();\n\n    const startPlaying = () => {\n        soundDispatch({\n            type: \"SET_PLAYING\",\n            playing: true\n        });\n        soundDispatch({\n            type: \"SET_VOLUME\",\n            volume: volume / 100\n        });\n    };\n\n    const stopPlaying = () => {\n        soundDispatch({\n            type: \"SET_PLAYING\",\n            playing: false\n        });\n    };\n\n    return (\n        <div className=\"body\">\n            <Header spotify={spotify} />\n            <div className=\"body__info\">\n                <img\n                    src={current_playlist ? current_playlist?.images[0]?.url : 'https://firebasestorage.googleapis.com/v0/b/spotify-raghavendra.appspot.com/o/logo.jpg?alt=media&token=f5835577-582c-4bde-861d-0a9127634b8e'}\n                    alt=\"\" />\n                <div className=\"body__infoText\">\n                    <strong>PLAYLIST</strong>\n                    <h2>{current_playlist?.name}</h2>\n                    <p>{current_playlist?.description}</p>\n                </div>\n            </div>\n\n            <div className=\"body__songs\">\n                <div className=\"body__icons\">\n                    {playing ? <PauseCircleFilledIcon onClick={track ? stopPlaying : null}\n                        className='body__shuffle' /> :\n                        <PlayCircleFilledIcon onClick={track ? startPlaying : null} fontSize='large'\n                            className='body__shuffle' />}\n                    <FavoriteIcon fontSize='large' />\n                    <MoreHorizIcon />\n                </div>\n                {tracks?.items.map(track => {\n                    return <SongRow track={track.track} key={track.track.id} />\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Body","import React from 'react'\nimport './Footer.css'\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport { Grid, Slider } from '@material-ui/core';\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport { useDataLayerValue } from \"../../data/DataLayer\";\nimport { useSoundLayerValue } from \"../../data/SoundLayer\";\n\nfunction Footer({ spotify }) {\n    const [{ track, tracks }, dispatch] = useDataLayerValue();\n    const [{ user }] = useDataLayerValue();\n    const [{ audio, playing, volume, repeat, shuffle }, soundDispatch] = useSoundLayerValue();\n\n    const startPlaying = () => {\n        soundDispatch({\n            type: \"SET_PLAYING\",\n            playing: true\n        });\n        soundDispatch({\n            type: \"SET_VOLUME\",\n            volume: volume / 100\n        });\n    };\n\n    const stopPlaying = () => {\n        soundDispatch({\n            type: \"SET_PLAYING\",\n            playing: false\n        });\n    };\n\n    const setRepeat = () => {\n        if (!repeat && shuffle) {\n            setShuffle();\n        }\n        var counter = 0;\n        var index = 0;\n        (tracks?.items).forEach(item => {\n            counter++;\n            if (item.track.id === track.id) {\n                index = counter - 1;\n            }\n        })\n        dispatch({\n            type: 'SET_TRACK',\n            track: tracks?.items[index]?.track,\n        });\n        let wasPlaying = playing;\n        soundDispatch({\n            type: 'SET_PLAYING',\n            playing: false,\n        });\n        let audio = new Audio(tracks?.items[index]?.track.preview_url);\n        audio.loop = repeat;\n        soundDispatch({\n            type: 'SET_AUDIO',\n            audio: audio\n        });\n\n        if (wasPlaying) {\n            soundDispatch({\n                type: 'SET_PLAYING',\n                playing: true,\n            });\n        }\n\n        document.title = `${tracks?.items[index]?.track.name} · ${tracks?.items[index]?.track.artists.map((artist) => artist.name).join(', ')}`;\n\n    };\n\n    const setShuffle = () => {\n        if (!shuffle && repeat) {\n            setRepeat();\n        }\n        soundDispatch({\n            type: \"SET_SHUFFLE\",\n            shuffle: !shuffle\n        });\n    };\n\n    const handleChange = (event, value) => {\n        soundDispatch({\n            type: \"SET_VOLUME\",\n            volume: value / 100\n        });\n    };\n    const skipNext = () => {\n\n        var counter = 0;\n        var index = 0;\n        (tracks?.items).forEach(item => {\n            counter++;\n            if (item.track.id === track.id) {\n                index = counter;\n            }\n        })\n        dispatch({\n            type: 'SET_TRACK',\n            track: tracks?.items[index]?.track,\n        });\n        let wasPlaying = playing;\n        soundDispatch({\n            type: 'SET_PLAYING',\n            playing: false,\n        });\n        let audio = new Audio(tracks?.items[index]?.track.preview_url);\n        audio.loop = repeat;\n        soundDispatch({\n            type: 'SET_AUDIO',\n            audio: audio\n        });\n\n        if (wasPlaying) {\n            soundDispatch({\n                type: 'SET_PLAYING',\n                playing: true,\n            });\n        }\n\n        document.title = `${tracks?.items[index]?.track.name} · ${tracks?.items[index]?.track.artists.map((artist) => artist.name).join(', ')}`;\n\n\n    };\n    const skipPrev = () => {\n\n        var counter = 0;\n        var index = 0;\n        (tracks?.items).forEach(item => {\n            counter++;\n            if (item.track.id === track.id) {\n                index = counter - 2;\n            }\n        })\n        dispatch({\n            type: 'SET_TRACK',\n            track: tracks?.items[index]?.track,\n        });\n        let wasPlaying = playing;\n        soundDispatch({\n            type: 'SET_PLAYING',\n            playing: false,\n        });\n        let audio = new Audio(tracks?.items[index]?.track.preview_url);\n        audio.loop = repeat;\n        soundDispatch({\n            type: 'SET_AUDIO',\n            audio: audio\n        });\n\n        if (wasPlaying) {\n            soundDispatch({\n                type: 'SET_PLAYING',\n                playing: true,\n            });\n        }\n\n        document.title = `${tracks?.items[index]?.track.name} · ${tracks?.items[index]?.track.artists.map((artist) => artist.name).join(', ')}`;\n\n\n    };\n\n    if (audio) {\n        audio.onended = () => {\n            if (shuffle) {\n                while (true) {\n                    let randomTrackNumber = Math.floor((Math.random() * tracks.items.length));\n                    let randomTrack = tracks.items[randomTrackNumber].track;\n                    if (track !== randomTrack) {\n                        dispatch({\n                            type: 'SET_TRACK',\n                            track: randomTrack\n                        });\n\n                        let wasPlaying = playing;\n                        soundDispatch({\n                            type: 'SET_PLAYING',\n                            playing: false,\n                        });\n\n                        let audio = new Audio(randomTrack.preview_url);\n                        audio.loop = repeat;\n                        soundDispatch({\n                            type: 'SET_AUDIO',\n                            audio: audio\n                        });\n\n                        if (wasPlaying) {\n                            soundDispatch({\n                                type: 'SET_PLAYING',\n                                playing: true,\n                            });\n                        }\n\n                        document.title = `${randomTrack.name} · ${randomTrack.artists.map((artist) => artist.name).join(', ')}`\n                        break\n                    }\n                }\n            }\n            if (!shuffle && !repeat) {\n                soundDispatch({\n                    type: 'SET_PLAYING',\n                    playing: false,\n                });\n            }\n        }\n    }\n\n    return (\n        <div className=\"footer\">\n            <div className='footer__left'>\n                <img className='footer__albumLogo' src={track ? track.album.images[0].url : user?.images[0]?.url} alt=\"\" />\n                <div className='footer__songInfo'>\n                    <h4>{track ? track.name : 'Please Play A Song'}</h4>\n                    <p>{track ? track.artists.map((artist) => artist.name).join(\", \") : \"Aucostic Player\"}</p>\n                </div>\n            </div>\n            <div className='footer__center'>\n                <ShuffleIcon onClick={track ? setShuffle : null} className={shuffle ? 'footer__orange' : 'footer__icon'} />\n\n                <SkipPreviousIcon onClick={skipPrev} className='footer__icon' />\n                {playing ? <PauseCircleOutlineIcon onClick={track ? stopPlaying : null} fontSize='large'\n                    className='footer__icon' /> :\n                    <PlayCircleOutlineIcon onClick={track ? startPlaying : null} fontSize='large'\n                        className='footer__icon' />}\n                <SkipNextIcon onClick={skipNext} className='footer__icon' />\n                <RepeatIcon onClick={track ? setRepeat : null} className={repeat ? 'footer__orange' : 'footer__icon'} />\n            </div>\n            <div className='footer__right'>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <PlaylistPlayIcon />\n                    </Grid>\n                    <Grid item>\n                        <VolumeDownIcon />\n                    </Grid>\n                    <Grid item xs>\n                        <Slider\n                            aria-labelledby=\"discrete-slider\"\n                            valueLabelDisplay=\"off\"\n                            onChange={handleChange}\n                            min={0}\n                            max={100}\n                        />\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer","import React from 'react'\nimport './Player.css'\nimport Sidebar from \"./sidebar/Sidebar\";\nimport Body from \"./body/Body\";\nimport Footer from \"./footer/Footer\";\n\nfunction Player({ spotify }) {\n    return (\n        <div className=\"player\">\n            <div className=\"player_body\">\n                <Sidebar spotify={spotify} />\n                <Body spotify={spotify} />\n            </div>\n            <Footer spotify={spotify} />\n        </div>\n    )\n}\n\nexport default Player","import React, { useEffect } from 'react';\nimport Login from './login/Login';\nimport './App.css';\nimport { getAccessTokenFromUrl } from \"./spotify\";\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from \"./player/Player\";\nimport { useDataLayerValue } from './data/DataLayer';\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n    const [{ token }, dispatch] = useDataLayerValue();\n\n    useEffect(() => {\n        const hash = getAccessTokenFromUrl();\n        window.location.hash = '';\n        const _token = hash['access_token'];\n\n        if (_token) {\n            dispatch({\n                type: \"SET_TOKEN\",\n                token: _token\n            });\n\n            dispatch({\n                type: \"SET_SPOTIFY\",\n                spotify: spotify,\n            });\n\n            spotify.setAccessToken(_token);\n            spotify.getMe().then(user => {\n                dispatch({\n                    type: 'SET_USER',\n                    user: user\n                })\n            });\n\n            spotify.getUserPlaylists().then((playlists) => {\n                dispatch({\n                    type: 'SET_PLAYLISTS',\n                    playlists: playlists,\n                })\n            });\n        }\n    }, [token, dispatch]);\n    return <div className=\"app\"> {token ? <Player spotify={spotify} /> : <Login />}</div>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\n    user: null,\n    playlists: [],\n    playing: false,\n    item: null,\n    current_playlist: null,\n    tracks: null,\n    track: null,\n    token: null,\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'SET_USER':\n            return {\n                ...state,\n                user: action.user\n            };\n        case \"SET_TOKEN\": {\n            return {\n                ...state,\n                token: action.token\n            }\n        }\n        case \"SET_PLAYLISTS\": {\n            return {\n                ...state,\n                playlists: action.playlists\n            }\n        }\n        case 'SET_CURRENT_PLAYLIST': {\n            let currentPlaylist = null;\n            state.playlists.items.forEach(playlist => {\n                if (playlist.id === action.id) {\n                    currentPlaylist = playlist;\n                }\n            });\n            return {\n                ...state,\n                current_playlist: currentPlaylist\n            }\n        }\n        case 'SET_TRACKS': {\n            return {\n                ...state,\n                tracks: action.tracks\n            };\n        }\n        case 'SET_TRACK': {\n            return {\n                ...state,\n                track: action.track\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","export const soundInitialState = {\n    audio: null,\n    playing: false,\n    volume: 0.5,\n    repeat: false,\n    shuffle: false,\n};\n\nconst soundReducer = (state, action) => {\n    switch (action.type) {\n        case 'SET_AUDIO':\n            return {\n                ...state,\n                audio: action.audio\n            };\n        case 'SET_PLAYING':\n            if (!action.playing) {\n                if (state.audio) {\n                    state.audio.pause();\n                }\n            } else {\n                if (state.audio) {\n                    state.audio.play();\n                }\n            }\n            return {\n                ...state,\n                playing: action.playing\n            };\n        case 'SET_VOLUME':\n            if (state.audio) {\n                state.audio.volume = action.volume;\n            }\n            return {\n                ...state,\n                volume: action.volume,\n            };\n        case 'SET_REPEAT':\n            if (state.audio) {\n                state.audio.loop = action.repeat;\n            }\n            return {\n                ...state,\n                repeat: action.repeat,\n            };\n        case 'SET_SHUFFLE':\n            if (state.audio) {\n                return {\n                    ...state,\n                    shuffle: action.shuffle\n                };\n            }\n            return state;\n        default:\n            return state;\n    }\n};\n\nexport default soundReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { DataLayer } from \"./data/DataLayer\";\nimport reducer, { initialState } from \"./data/reducer\";\nimport { SoundLayer } from \"./data/SoundLayer\";\nimport soundReducer, { soundInitialState } from \"./data/soundReducer\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <DataLayer initialState={initialState} reducer={reducer}>\n            <SoundLayer initialState={soundInitialState} reducer={soundReducer}>\n                <App />\n            </SoundLayer>\n        </DataLayer>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}